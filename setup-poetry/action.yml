name: Set up Poetry
description: Install Poetry, add it to the PATH, and cache it to speed up workflows.
inputs:
  poetry-version:
    default: 2.1.4
  use-cache:
    description: >
      A Boolean specifying whether to use the cache. Set this to false to work
      around caching problems.
    default: true
outputs:
  cache-hit:
    description: >
      A Boolean indicating whether Poetry was loaded from the cache. This is
      mainly intended for testing the action.
    value: ${{ steps.cache-poetry.outputs.cache-hit }}
runs:
  using: composite
  steps:
    - name: Check that setup-python was called
      run: |
        if [ ! -d "$pythonLocation" -o -z "$pythonVersion" ]; then
          echo "You must use the setup-python action before using this action."
          exit 1
        fi 
      shell: bash
    - name: Set paths
      run: |
        poetry_root="$RUNNER_TEMP/poetry"
        poetry_home="$poetry_root/home"
        poetry_bin="$poetry_root/bin"
        if [[ "$RUNNER_OS" == "Windows" ]]; then
          binary_folder_name="Scripts"
        else
          binary_folder_name="bin"
        fi

        echo "POETRY_BIN_DIR=$poetry_bin" >> "$GITHUB_ENV"
        echo "POETRY_CONFIG_DIR=$poetry_root/config" >> "$GITHUB_ENV"
        echo "POETRY_HOME=$poetry_home" >> "$GITHUB_ENV"
        echo "POETRY_HOME_BIN=$poetry_home/$binary_folder_name" >> "$GITHUB_ENV"
        echo "$poetry_bin" >> "$GITHUB_PATH"
      shell: bash
    - name: Copy paths from $GITHUB_ENV to $GITHUB_OUTPUT
      id: copy-paths
      run: |
        echo "poetry-bin-dir=$POETRY_BIN_DIR" >> "$GITHUB_OUTPUT"
        echo "poetry-home=$POETRY_HOME" >> "$GITHUB_OUTPUT"
        echo "poetry-hash=$(echo "$POETRY_BIN_DIR" | sha256sum | cut -d ' ' -f1)" >> $GITHUB_OUTPUT
      shell: bash
    - name: Cache poetry
      if: ${{ inputs.use-cache == 'true' }}
      id: cache-poetry
      uses: actions/cache@0400d5f644dc74513175e3cd8d07132dd4860809 # v4.2.4
      with:
        # Using ${{ env.POETRY_HOME }} here does not work because it is evaluated before the "set paths" step runs.
        path: |
          ${{ steps.copy-paths.outputs.poetry-bin-dir }}/poetry*
          ${{ steps.copy-paths.outputs.poetry-home }}          
        key: poetry${{ inputs.poetry-version }}-${{ runner.os }}-py${{ env.pythonVersion }}-${{ steps.copy-paths.outputs.poetry-hash}}
    - name: Install Poetry
      if: steps.cache-poetry.outputs.cache-hit != 'true'
      run: |
        python -m venv "$POETRY_HOME"
        "$POETRY_HOME_BIN/python" -m pip install poetry==${{ inputs.poetry-version }}
        mkdir -p "$POETRY_BIN_DIR"
        ln -s "$POETRY_HOME_BIN/poetry"* "$POETRY_BIN_DIR/"
      shell: bash
    - name: Print Poetry version
      run: poetry --version
      shell: bash
    - name: Log debug info
      if: failure()
      run: |
        echo "GITHUB_WORKSPACE=$GITHUB_WORKSPACE"
        echo "PATH=$PATH"
        echo "RUNNER_TEMP=$RUNNER_TEMP"
        echo "RUNNER_TOOL_CACHE=$RUNNER_TOOL_CACHE"
        ls -al "$POETRY_BIN_DIR" "$POETRY_HOME" "$POETRY_HOME_BIN" || true
      shell: bash
